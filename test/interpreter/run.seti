func get_file_lines(file) {
    content = $(cat ${file})
    lines = []

    for line in content {
        if line[0] == "#" {
          lines.append(line[1:])
        }
    }

    return lines
}

func get_file_output(file) {
    lines = get_file_lines(file)
    get = false
    out_lines = []

    for line in lines {
        if line.trim() == "--output:end" {
            get = false
        }

        if get {
            out_lines.append(line.trim())
        }

        if line.trim() == "--output:start" {
            get = true
        }
    }

    return out_lines
}

# seti interpreter has several limitations at this moment
# on the future this test must be improved

seti_path = "../build/shell/seti"
test_path = "../test/interpreter"

for f in $(ls ${test_path}/func) {
    file = test_path +"/func/"+ f
    fres = get_file_output(file)
    fout = $(./${seti_path} ${file})

    expected = fres.join("\n").trim()
    output = string(fout).trim()

    if expected ==  output{
        echo test ${file} correct
    } else {
        echo test ${file} error
        print("output: ", output)
        print("expected: ", expected)
    }
}

